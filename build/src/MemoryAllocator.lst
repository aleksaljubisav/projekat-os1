GAS LISTING /tmp/ccWLOab8.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocatorC2Ev
   9              	_ZN15MemoryAllocatorC2Ev:
  10              	.LFB2:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 5/22/22.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** // Singleton getter
   8:src/MemoryAllocator.cpp **** MemoryAllocator& MemoryAllocator::getInstance()
   9:src/MemoryAllocator.cpp **** {
  10:src/MemoryAllocator.cpp ****     static MemoryAllocator instance;
  11:src/MemoryAllocator.cpp ****     return instance;
  12:src/MemoryAllocator.cpp **** }
  13:src/MemoryAllocator.cpp **** 
  14:src/MemoryAllocator.cpp **** // Class constructor
  15:src/MemoryAllocator.cpp **** MemoryAllocator::MemoryAllocator()
  12              		.loc 1 15 1
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21              	.LBB8:
  16:src/MemoryAllocator.cpp **** {
  17:src/MemoryAllocator.cpp ****     freeMemHead = (BlockHeader*)(HEAP_START_ADDR);
  22              		.loc 1 17 5
  23              		.loc 1 17 17 is_stmt 0
  24 000c 97060000 		la	a3,HEAP_START_ADDR
  24      83B60600 
  25 0014 03B70600 		ld	a4,0(a3)
  26 0018 97070000 		lla	a5,.LANCHOR0
  26      93870700 
  27 0020 23B0E700 		sd	a4,0(a5)
  18:src/MemoryAllocator.cpp ****     freeMemHead->next = nullptr;
  28              		.loc 1 18 5 is_stmt 1
  29              		.loc 1 18 23 is_stmt 0
  30 0024 23300700 		sd	zero,0(a4)
  19:src/MemoryAllocator.cpp ****     freeMemHead->prev = nullptr;
  31              		.loc 1 19 5 is_stmt 1
  32              		.loc 1 19 18 is_stmt 0
  33 0028 03B70700 		ld	a4,0(a5)
  34              		.loc 1 19 23
  35 002c 23340700 		sd	zero,8(a4)
  20:src/MemoryAllocator.cpp ****     freeMemHead->size = (size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR - sizeof(BlockHeader);
  36              		.loc 1 20 5 is_stmt 1
GAS LISTING /tmp/ccWLOab8.s 			page 2


  37              		.loc 1 20 47 is_stmt 0
  38 0030 97070000 		la	a5,HEAP_END_ADDR
  38      83B70700 
  39 0038 83B70700 		ld	a5,0(a5)
  40 003c 83B60600 		ld	a3,0(a3)
  41 0040 B387D740 		sub	a5,a5,a3
  42              		.loc 1 20 73
  43 0044 938787FE 		addi	a5,a5,-24
  44              		.loc 1 20 23
  45 0048 2338F700 		sd	a5,16(a4)
  46              	.LBE8:
  21:src/MemoryAllocator.cpp **** }
  47              		.loc 1 21 1
  48 004c 03348100 		ld	s0,8(sp)
  49              		.cfi_restore 8
  50              		.cfi_def_cfa 2, 16
  51 0050 13010101 		addi	sp,sp,16
  52              		.cfi_def_cfa_offset 0
  53 0054 67800000 		jr	ra
  54              		.cfi_endproc
  55              	.LFE2:
  57              		.globl	_ZN15MemoryAllocatorC1Ev
  58              		.set	_ZN15MemoryAllocatorC1Ev,_ZN15MemoryAllocatorC2Ev
  59              		.align	2
  60              		.globl	_ZN15MemoryAllocator11getInstanceEv
  62              	_ZN15MemoryAllocator11getInstanceEv:
  63              	.LFB0:
   9:src/MemoryAllocator.cpp ****     static MemoryAllocator instance;
  64              		.loc 1 9 1 is_stmt 1
  65              		.cfi_startproc
  10:src/MemoryAllocator.cpp ****     return instance;
  66              		.loc 1 10 5
  10:src/MemoryAllocator.cpp ****     return instance;
  67              		.loc 1 10 28 is_stmt 0
  68 0058 97070000 		lbu	a5,.LANCHOR0+8
  68      83C70700 
  69 0060 63880700 		beqz	a5,.L9
  11:src/MemoryAllocator.cpp **** }
  70              		.loc 1 11 5 is_stmt 1
  12:src/MemoryAllocator.cpp **** 
  71              		.loc 1 12 1 is_stmt 0
  72 0064 17050000 		lla	a0,.LANCHOR0+16
  72      13050500 
  73 006c 67800000 		ret
  74              	.L9:
   9:src/MemoryAllocator.cpp ****     static MemoryAllocator instance;
  75              		.loc 1 9 1 discriminator 1
  76 0070 130101FF 		addi	sp,sp,-16
  77              		.cfi_def_cfa_offset 16
  78 0074 23341100 		sd	ra,8(sp)
  79 0078 23308100 		sd	s0,0(sp)
  80              		.cfi_offset 1, -8
  81              		.cfi_offset 8, -16
  82 007c 13040101 		addi	s0,sp,16
  83              		.cfi_def_cfa 8, 0
  10:src/MemoryAllocator.cpp ****     return instance;
  84              		.loc 1 10 28 discriminator 1
GAS LISTING /tmp/ccWLOab8.s 			page 3


  85 0080 17050000 		lla	a0,.LANCHOR0+16
  85      13050500 
  86 0088 97000000 		call	_ZN15MemoryAllocatorC1Ev
  86      E7800000 
  87              	.LVL1:
  88 0090 93071000 		li	a5,1
  89 0094 17070000 		sb	a5,.LANCHOR0+8,a4
  89      2300F700 
  11:src/MemoryAllocator.cpp **** }
  90              		.loc 1 11 5 is_stmt 1 discriminator 1
  12:src/MemoryAllocator.cpp **** 
  91              		.loc 1 12 1 is_stmt 0 discriminator 1
  92 009c 17050000 		lla	a0,.LANCHOR0+16
  92      13050500 
  93 00a4 83308100 		ld	ra,8(sp)
  94              		.cfi_restore 1
  95 00a8 03340100 		ld	s0,0(sp)
  96              		.cfi_restore 8
  97              		.cfi_def_cfa 2, 16
  98 00ac 13010101 		addi	sp,sp,16
  99              		.cfi_def_cfa_offset 0
 100 00b0 67800000 		jr	ra
 101              		.cfi_endproc
 102              	.LFE0:
 104              		.align	2
 105              		.globl	_ZN15MemoryAllocator11__mem_allocEm
 107              	_ZN15MemoryAllocator11__mem_allocEm:
 108              	.LFB7:
  22:src/MemoryAllocator.cpp **** 
  23:src/MemoryAllocator.cpp **** // freeMemHead initialization
  24:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::freeMemHead = nullptr;
  25:src/MemoryAllocator.cpp **** 
  26:src/MemoryAllocator.cpp **** // allocMemHead initialization
  27:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::allocMemHead = nullptr;
  28:src/MemoryAllocator.cpp **** 
  29:src/MemoryAllocator.cpp **** // First fit algorithm
  30:src/MemoryAllocator.cpp **** inline MemoryAllocator::BlockHeader* MemoryAllocator::findFirstFit(size_t size)
  31:src/MemoryAllocator.cpp **** {
  32:src/MemoryAllocator.cpp ****     BlockHeader* blk = freeMemHead;
  33:src/MemoryAllocator.cpp ****     for(; blk!=nullptr; blk = blk->next)
  34:src/MemoryAllocator.cpp ****         if(blk->size >= size) break;
  35:src/MemoryAllocator.cpp ****     return blk;
  36:src/MemoryAllocator.cpp **** }
  37:src/MemoryAllocator.cpp **** 
  38:src/MemoryAllocator.cpp **** // Helper: Get block from the ordered free list
  39:src/MemoryAllocator.cpp **** inline void MemoryAllocator::getFromFreeList(BlockHeader* blk, size_t size)
  40:src/MemoryAllocator.cpp **** {
  41:src/MemoryAllocator.cpp ****     size_t allocSize = (size % MEM_BLOCK_SIZE == 0) ? size : (size + MEM_BLOCK_SIZE - size % MEM_BL
  42:src/MemoryAllocator.cpp ****     size_t remainingSize = blk->size - allocSize;
  43:src/MemoryAllocator.cpp ****     if(remainingSize >= sizeof(BlockHeader) + MEM_BLOCK_SIZE)
  44:src/MemoryAllocator.cpp ****     {
  45:src/MemoryAllocator.cpp ****         // A fragment remains
  46:src/MemoryAllocator.cpp ****         blk->size = size;
  47:src/MemoryAllocator.cpp ****         size_t offset = sizeof(BlockHeader) + allocSize;
  48:src/MemoryAllocator.cpp ****         auto* newBlk = (BlockHeader*)((char*)blk + offset);
  49:src/MemoryAllocator.cpp **** 
  50:src/MemoryAllocator.cpp ****         // Prevezivanje
GAS LISTING /tmp/ccWLOab8.s 			page 4


  51:src/MemoryAllocator.cpp ****         if(blk->prev) blk->prev->next = newBlk;
  52:src/MemoryAllocator.cpp ****         else freeMemHead = newBlk;
  53:src/MemoryAllocator.cpp ****         newBlk->prev = blk->prev;
  54:src/MemoryAllocator.cpp ****         if(blk->next) blk->next->prev = newBlk;
  55:src/MemoryAllocator.cpp ****         newBlk->next = blk->next;
  56:src/MemoryAllocator.cpp **** 
  57:src/MemoryAllocator.cpp ****         newBlk->size = remainingSize - sizeof(BlockHeader);
  58:src/MemoryAllocator.cpp ****     } else
  59:src/MemoryAllocator.cpp ****     {
  60:src/MemoryAllocator.cpp ****         // No remaining fragment, allocate the entire block
  61:src/MemoryAllocator.cpp ****         if(blk->prev) blk->prev->next = blk->next;
  62:src/MemoryAllocator.cpp ****         else freeMemHead = blk->next;
  63:src/MemoryAllocator.cpp ****         if(blk->next) blk->next->prev = blk->prev;
  64:src/MemoryAllocator.cpp ****     }
  65:src/MemoryAllocator.cpp ****     blk->next = nullptr;
  66:src/MemoryAllocator.cpp ****     blk->prev = nullptr;
  67:src/MemoryAllocator.cpp **** }
  68:src/MemoryAllocator.cpp **** 
  69:src/MemoryAllocator.cpp **** // Helper: Put block into the ordered alloc list
  70:src/MemoryAllocator.cpp **** inline void MemoryAllocator::putIntoOrderedList(BlockHeader* blk, BlockHeader* &head)
  71:src/MemoryAllocator.cpp **** {
  72:src/MemoryAllocator.cpp ****     BlockHeader* cur = head;
  73:src/MemoryAllocator.cpp ****     if(!head || (char*)blk < (char*)head)
  74:src/MemoryAllocator.cpp ****         cur = nullptr;
  75:src/MemoryAllocator.cpp ****     else
  76:src/MemoryAllocator.cpp ****         for(; cur->next!=nullptr && (char*)blk > (char*)(cur->next); cur = cur->next);
  77:src/MemoryAllocator.cpp ****     blk->prev = cur;
  78:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
  79:src/MemoryAllocator.cpp ****     else blk->next = head;
  80:src/MemoryAllocator.cpp **** 
  81:src/MemoryAllocator.cpp ****     if(blk->next) blk->next->prev = blk;
  82:src/MemoryAllocator.cpp ****     if(cur) cur->next = blk;
  83:src/MemoryAllocator.cpp ****     else head = blk;
  84:src/MemoryAllocator.cpp **** }
  85:src/MemoryAllocator.cpp **** 
  86:src/MemoryAllocator.cpp **** // Memory allocation-------------------------------------------------------------------------------
  87:src/MemoryAllocator.cpp **** void* MemoryAllocator::__mem_alloc(size_t size)
  88:src/MemoryAllocator.cpp **** {
 109              		.loc 1 88 1 is_stmt 1
 110              		.cfi_startproc
 111              	.LVL2:
 112 00b4 130101FF 		addi	sp,sp,-16
 113              		.cfi_def_cfa_offset 16
 114 00b8 23348100 		sd	s0,8(sp)
 115              		.cfi_offset 8, -8
 116 00bc 13040101 		addi	s0,sp,16
 117              		.cfi_def_cfa 8, 0
 118 00c0 13070500 		mv	a4,a0
  89:src/MemoryAllocator.cpp ****     // Try to find an existing free block in list (first fit):
  90:src/MemoryAllocator.cpp ****     BlockHeader* blk = findFirstFit(size);
 119              		.loc 1 90 5
 120              	.LVL3:
 121              	.LBB17:
 122              	.LBB18:
  32:src/MemoryAllocator.cpp ****     for(; blk!=nullptr; blk = blk->next)
 123              		.loc 1 32 5
  32:src/MemoryAllocator.cpp ****     for(; blk!=nullptr; blk = blk->next)
GAS LISTING /tmp/ccWLOab8.s 			page 5


 124              		.loc 1 32 18 is_stmt 0
 125 00c4 17050000 		ld	a0,.LANCHOR0
 125      03350500 
 126              	.LVL4:
 127              	.L12:
  33:src/MemoryAllocator.cpp ****         if(blk->size >= size) break;
 128              		.loc 1 33 5 is_stmt 1
  33:src/MemoryAllocator.cpp ****         if(blk->size >= size) break;
 129              		.loc 1 33 14
 130 00cc 630A0500 		beqz	a0,.L11
  34:src/MemoryAllocator.cpp ****     return blk;
 131              		.loc 1 34 9
  34:src/MemoryAllocator.cpp ****     return blk;
 132              		.loc 1 34 17 is_stmt 0
 133 00d0 83370501 		ld	a5,16(a0)
  34:src/MemoryAllocator.cpp ****     return blk;
 134              		.loc 1 34 9
 135 00d4 63F6E700 		bleu	a4,a5,.L11
  33:src/MemoryAllocator.cpp ****         if(blk->size >= size) break;
 136              		.loc 1 33 5 is_stmt 1
  33:src/MemoryAllocator.cpp ****         if(blk->size >= size) break;
 137              		.loc 1 33 29 is_stmt 0
 138 00d8 03350500 		ld	a0,0(a0)
 139              	.LVL5:
  33:src/MemoryAllocator.cpp ****         if(blk->size >= size) break;
 140              		.loc 1 33 5
 141 00dc 6FF01FFF 		j	.L12
 142              	.L11:
  35:src/MemoryAllocator.cpp **** }
 143              		.loc 1 35 5 is_stmt 1
 144              	.LVL6:
 145              	.LBE18:
 146              	.LBE17:
  91:src/MemoryAllocator.cpp ****     if(blk == nullptr) return nullptr; // If not found
 147              		.loc 1 91 5
 148 00e0 630A0510 		beqz	a0,.L10
  92:src/MemoryAllocator.cpp **** 
  93:src/MemoryAllocator.cpp ****     // Get block from free memory list
  94:src/MemoryAllocator.cpp ****     getFromFreeList(blk, size);
 149              		.loc 1 94 5
 150              	.LVL7:
 151              	.LBB19:
 152              	.LBB20:
  41:src/MemoryAllocator.cpp ****     size_t remainingSize = blk->size - allocSize;
 153              		.loc 1 41 5
  41:src/MemoryAllocator.cpp ****     size_t remainingSize = blk->size - allocSize;
 154              		.loc 1 41 30 is_stmt 0
 155 00e4 9377F703 		andi	a5,a4,63
  41:src/MemoryAllocator.cpp ****     size_t remainingSize = blk->size - allocSize;
 156              		.loc 1 41 53
 157 00e8 638C0708 		beqz	a5,.L31
  41:src/MemoryAllocator.cpp ****     size_t remainingSize = blk->size - allocSize;
 158              		.loc 1 41 85
 159 00ec 937707FC 		andi	a5,a4,-64
  41:src/MemoryAllocator.cpp ****     size_t remainingSize = blk->size - allocSize;
 160              		.loc 1 41 53
 161 00f0 93870704 		addi	a5,a5,64
GAS LISTING /tmp/ccWLOab8.s 			page 6


 162              	.L14:
 163              	.LVL8:
  42:src/MemoryAllocator.cpp ****     if(remainingSize >= sizeof(BlockHeader) + MEM_BLOCK_SIZE)
 164              		.loc 1 42 5 is_stmt 1
  42:src/MemoryAllocator.cpp ****     if(remainingSize >= sizeof(BlockHeader) + MEM_BLOCK_SIZE)
 165              		.loc 1 42 33 is_stmt 0
 166 00f4 83360501 		ld	a3,16(a0)
  42:src/MemoryAllocator.cpp ****     if(remainingSize >= sizeof(BlockHeader) + MEM_BLOCK_SIZE)
 167              		.loc 1 42 12
 168 00f8 B386F640 		sub	a3,a3,a5
 169              	.LVL9:
  43:src/MemoryAllocator.cpp ****     {
 170              		.loc 1 43 5 is_stmt 1
 171              	.LBB21:
 172 00fc 13067005 		li	a2,87
 173 0100 637AD608 		bleu	a3,a2,.L15
 174              	.LBB22:
  46:src/MemoryAllocator.cpp ****         size_t offset = sizeof(BlockHeader) + allocSize;
 175              		.loc 1 46 9
  46:src/MemoryAllocator.cpp ****         size_t offset = sizeof(BlockHeader) + allocSize;
 176              		.loc 1 46 19 is_stmt 0
 177 0104 2338E500 		sd	a4,16(a0)
  47:src/MemoryAllocator.cpp ****         auto* newBlk = (BlockHeader*)((char*)blk + offset);
 178              		.loc 1 47 9 is_stmt 1
  47:src/MemoryAllocator.cpp ****         auto* newBlk = (BlockHeader*)((char*)blk + offset);
 179              		.loc 1 47 16 is_stmt 0
 180 0108 93878701 		addi	a5,a5,24
 181              	.LVL10:
  48:src/MemoryAllocator.cpp **** 
 182              		.loc 1 48 9 is_stmt 1
  48:src/MemoryAllocator.cpp **** 
 183              		.loc 1 48 15 is_stmt 0
 184 010c B307F500 		add	a5,a0,a5
 185              	.LVL11:
  51:src/MemoryAllocator.cpp ****         else freeMemHead = newBlk;
 186              		.loc 1 51 9 is_stmt 1
  51:src/MemoryAllocator.cpp ****         else freeMemHead = newBlk;
 187              		.loc 1 51 17 is_stmt 0
 188 0110 03378500 		ld	a4,8(a0)
 189              	.LVL12:
  51:src/MemoryAllocator.cpp ****         else freeMemHead = newBlk;
 190              		.loc 1 51 9
 191 0114 630A0706 		beqz	a4,.L16
  51:src/MemoryAllocator.cpp ****         else freeMemHead = newBlk;
 192              		.loc 1 51 23 is_stmt 1
  51:src/MemoryAllocator.cpp ****         else freeMemHead = newBlk;
 193              		.loc 1 51 39 is_stmt 0
 194 0118 2330F700 		sd	a5,0(a4)
 195              	.LVL13:
 196              	.L17:
  53:src/MemoryAllocator.cpp ****         if(blk->next) blk->next->prev = newBlk;
 197              		.loc 1 53 9 is_stmt 1
  53:src/MemoryAllocator.cpp ****         if(blk->next) blk->next->prev = newBlk;
 198              		.loc 1 53 29 is_stmt 0
 199 011c 03378500 		ld	a4,8(a0)
  53:src/MemoryAllocator.cpp ****         if(blk->next) blk->next->prev = newBlk;
 200              		.loc 1 53 22
GAS LISTING /tmp/ccWLOab8.s 			page 7


 201 0120 23B4E700 		sd	a4,8(a5)
  54:src/MemoryAllocator.cpp ****         newBlk->next = blk->next;
 202              		.loc 1 54 9 is_stmt 1
  54:src/MemoryAllocator.cpp ****         newBlk->next = blk->next;
 203              		.loc 1 54 17 is_stmt 0
 204 0124 03370500 		ld	a4,0(a0)
  54:src/MemoryAllocator.cpp ****         newBlk->next = blk->next;
 205              		.loc 1 54 9
 206 0128 63040700 		beqz	a4,.L18
  54:src/MemoryAllocator.cpp ****         newBlk->next = blk->next;
 207              		.loc 1 54 23 is_stmt 1
  54:src/MemoryAllocator.cpp ****         newBlk->next = blk->next;
 208              		.loc 1 54 39 is_stmt 0
 209 012c 2334F700 		sd	a5,8(a4)
 210              	.L18:
  55:src/MemoryAllocator.cpp **** 
 211              		.loc 1 55 9 is_stmt 1
  55:src/MemoryAllocator.cpp **** 
 212              		.loc 1 55 29 is_stmt 0
 213 0130 03370500 		ld	a4,0(a0)
  55:src/MemoryAllocator.cpp **** 
 214              		.loc 1 55 22
 215 0134 23B0E700 		sd	a4,0(a5)
  57:src/MemoryAllocator.cpp ****     } else
 216              		.loc 1 57 9 is_stmt 1
  57:src/MemoryAllocator.cpp ****     } else
 217              		.loc 1 57 38 is_stmt 0
 218 0138 938686FE 		addi	a3,a3,-24
 219              	.LVL14:
  57:src/MemoryAllocator.cpp ****     } else
 220              		.loc 1 57 22
 221 013c 23B8D700 		sd	a3,16(a5)
 222              	.LVL15:
 223              	.L19:
 224              	.LBE22:
 225              	.LBE21:
  65:src/MemoryAllocator.cpp ****     blk->prev = nullptr;
 226              		.loc 1 65 5 is_stmt 1
  65:src/MemoryAllocator.cpp ****     blk->prev = nullptr;
 227              		.loc 1 65 15 is_stmt 0
 228 0140 23300500 		sd	zero,0(a0)
  66:src/MemoryAllocator.cpp **** }
 229              		.loc 1 66 5 is_stmt 1
  66:src/MemoryAllocator.cpp **** }
 230              		.loc 1 66 15 is_stmt 0
 231 0144 23340500 		sd	zero,8(a0)
 232              	.LVL16:
 233              	.LBE20:
 234              	.LBE19:
  95:src/MemoryAllocator.cpp **** 
  96:src/MemoryAllocator.cpp ****     // Put block in allocated memory list
  97:src/MemoryAllocator.cpp ****     putIntoOrderedList(blk, allocMemHead);
 235              		.loc 1 97 5 is_stmt 1
 236              	.LBB26:
 237              	.LBB27:
  72:src/MemoryAllocator.cpp ****     if(!head || (char*)blk < (char*)head)
 238              		.loc 1 72 5
GAS LISTING /tmp/ccWLOab8.s 			page 8


  72:src/MemoryAllocator.cpp ****     if(!head || (char*)blk < (char*)head)
 239              		.loc 1 72 18 is_stmt 0
 240 0148 97070000 		ld	a5,.LANCHOR0+24
 240      83B70700 
 241              	.LVL17:
  73:src/MemoryAllocator.cpp ****         cur = nullptr;
 242              		.loc 1 73 5 is_stmt 1
 243 0150 6388070A 		beqz	a5,.L22
  73:src/MemoryAllocator.cpp ****         cur = nullptr;
 244              		.loc 1 73 14 is_stmt 0
 245 0154 636AF506 		bltu	a0,a5,.L23
 246              	.LVL18:
 247              	.L25:
  76:src/MemoryAllocator.cpp ****     blk->prev = cur;
 248              		.loc 1 76 9 is_stmt 1
  76:src/MemoryAllocator.cpp ****     blk->prev = cur;
 249              		.loc 1 76 34
 250 0158 13870700 		mv	a4,a5
  76:src/MemoryAllocator.cpp ****     blk->prev = cur;
 251              		.loc 1 76 20 is_stmt 0
 252 015c 83B70700 		ld	a5,0(a5)
 253              	.LVL19:
  76:src/MemoryAllocator.cpp ****     blk->prev = cur;
 254              		.loc 1 76 34
 255 0160 63840700 		beqz	a5,.L24
 256 0164 E3EAA7FE 		bgtu	a0,a5,.L25
 257              	.L24:
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 258              		.loc 1 77 5 is_stmt 1
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 259              		.loc 1 77 15 is_stmt 0
 260 0168 2334E500 		sd	a4,8(a0)
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 261              		.loc 1 78 5 is_stmt 1
 262 016c 630E0708 		beqz	a4,.L32
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 263              		.loc 1 78 13
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 264              		.loc 1 78 30 is_stmt 0
 265 0170 83370700 		ld	a5,0(a4)
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 266              		.loc 1 78 23
 267 0174 2330F500 		sd	a5,0(a0)
 268 0178 93070700 		mv	a5,a4
 269 017c 6F000006 		j	.L27
 270              	.LVL20:
 271              	.L31:
 272              	.LBE27:
 273              	.LBE26:
 274              	.LBB30:
 275              	.LBB25:
  41:src/MemoryAllocator.cpp ****     size_t remainingSize = blk->size - allocSize;
 276              		.loc 1 41 53
 277 0180 93070700 		mv	a5,a4
 278 0184 6FF01FF7 		j	.L14
 279              	.LVL21:
 280              	.L16:
GAS LISTING /tmp/ccWLOab8.s 			page 9


 281              	.LBB24:
 282              	.LBB23:
  52:src/MemoryAllocator.cpp ****         newBlk->prev = blk->prev;
 283              		.loc 1 52 14 is_stmt 1
  52:src/MemoryAllocator.cpp ****         newBlk->prev = blk->prev;
 284              		.loc 1 52 26 is_stmt 0
 285 0188 17070000 		sd	a5,.LANCHOR0,a4
 285      2330F700 
 286 0190 6FF0DFF8 		j	.L17
 287              	.LVL22:
 288              	.L15:
 289              	.LBE23:
  61:src/MemoryAllocator.cpp ****         else freeMemHead = blk->next;
 290              		.loc 1 61 9 is_stmt 1
  61:src/MemoryAllocator.cpp ****         else freeMemHead = blk->next;
 291              		.loc 1 61 17 is_stmt 0
 292 0194 83378500 		ld	a5,8(a0)
 293              	.LVL23:
  61:src/MemoryAllocator.cpp ****         else freeMemHead = blk->next;
 294              		.loc 1 61 9
 295 0198 63800702 		beqz	a5,.L20
  61:src/MemoryAllocator.cpp ****         else freeMemHead = blk->next;
 296              		.loc 1 61 23 is_stmt 1
  61:src/MemoryAllocator.cpp ****         else freeMemHead = blk->next;
 297              		.loc 1 61 46 is_stmt 0
 298 019c 03370500 		ld	a4,0(a0)
 299              	.LVL24:
  61:src/MemoryAllocator.cpp ****         else freeMemHead = blk->next;
 300              		.loc 1 61 39
 301 01a0 23B0E700 		sd	a4,0(a5)
 302              	.L21:
  63:src/MemoryAllocator.cpp ****     }
 303              		.loc 1 63 9 is_stmt 1
  63:src/MemoryAllocator.cpp ****     }
 304              		.loc 1 63 17 is_stmt 0
 305 01a4 83370500 		ld	a5,0(a0)
  63:src/MemoryAllocator.cpp ****     }
 306              		.loc 1 63 9
 307 01a8 E38C07F8 		beqz	a5,.L19
  63:src/MemoryAllocator.cpp ****     }
 308              		.loc 1 63 23 is_stmt 1
  63:src/MemoryAllocator.cpp ****     }
 309              		.loc 1 63 46 is_stmt 0
 310 01ac 03378500 		ld	a4,8(a0)
  63:src/MemoryAllocator.cpp ****     }
 311              		.loc 1 63 39
 312 01b0 23B4E700 		sd	a4,8(a5)
 313 01b4 6FF0DFF8 		j	.L19
 314              	.LVL25:
 315              	.L20:
  62:src/MemoryAllocator.cpp ****         if(blk->next) blk->next->prev = blk->prev;
 316              		.loc 1 62 14 is_stmt 1
  62:src/MemoryAllocator.cpp ****         if(blk->next) blk->next->prev = blk->prev;
 317              		.loc 1 62 33 is_stmt 0
 318 01b8 83370500 		ld	a5,0(a0)
  62:src/MemoryAllocator.cpp ****         if(blk->next) blk->next->prev = blk->prev;
 319              		.loc 1 62 26
GAS LISTING /tmp/ccWLOab8.s 			page 10


 320 01bc 17070000 		sd	a5,.LANCHOR0,a4
 320      2330F700 
 321              	.LVL26:
 322 01c4 6FF01FFE 		j	.L21
 323              	.LVL27:
 324              	.L23:
 325              	.LBE24:
 326              	.LBE25:
 327              	.LBE30:
 328              	.LBB31:
 329              	.LBB28:
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 330              		.loc 1 77 5 is_stmt 1
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 331              		.loc 1 77 15 is_stmt 0
 332 01c8 23340500 		sd	zero,8(a0)
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 333              		.loc 1 78 5 is_stmt 1
  74:src/MemoryAllocator.cpp ****     else
 334              		.loc 1 74 13 is_stmt 0
 335 01cc 93070000 		li	a5,0
 336              	.LVL28:
 337              	.L26:
  79:src/MemoryAllocator.cpp **** 
 338              		.loc 1 79 10 is_stmt 1
  79:src/MemoryAllocator.cpp **** 
 339              		.loc 1 79 22 is_stmt 0
 340 01d0 17070000 		ld	a4,.LANCHOR0+24
 340      03370700 
  79:src/MemoryAllocator.cpp **** 
 341              		.loc 1 79 20
 342 01d8 2330E500 		sd	a4,0(a0)
 343              	.L27:
  81:src/MemoryAllocator.cpp ****     if(cur) cur->next = blk;
 344              		.loc 1 81 5 is_stmt 1
  81:src/MemoryAllocator.cpp ****     if(cur) cur->next = blk;
 345              		.loc 1 81 13 is_stmt 0
 346 01dc 03370500 		ld	a4,0(a0)
  81:src/MemoryAllocator.cpp ****     if(cur) cur->next = blk;
 347              		.loc 1 81 5
 348 01e0 63040700 		beqz	a4,.L28
  81:src/MemoryAllocator.cpp ****     if(cur) cur->next = blk;
 349              		.loc 1 81 19 is_stmt 1
  81:src/MemoryAllocator.cpp ****     if(cur) cur->next = blk;
 350              		.loc 1 81 35 is_stmt 0
 351 01e4 2334A700 		sd	a0,8(a4)
 352              	.L28:
  82:src/MemoryAllocator.cpp ****     else head = blk;
 353              		.loc 1 82 5 is_stmt 1
 354 01e8 63840702 		beqz	a5,.L29
  82:src/MemoryAllocator.cpp ****     else head = blk;
 355              		.loc 1 82 13
  82:src/MemoryAllocator.cpp ****     else head = blk;
 356              		.loc 1 82 23 is_stmt 0
 357 01ec 23B0A700 		sd	a0,0(a5)
 358              	.L30:
 359              	.LVL29:
GAS LISTING /tmp/ccWLOab8.s 			page 11


 360              	.LBE28:
 361              	.LBE31:
  98:src/MemoryAllocator.cpp **** 
  99:src/MemoryAllocator.cpp ****     return (char*)blk + sizeof(BlockHeader);
 362              		.loc 1 99 5 is_stmt 1
 363              		.loc 1 99 43 is_stmt 0
 364 01f0 13058501 		addi	a0,a0,24
 365              	.LVL30:
 366              	.L10:
 100:src/MemoryAllocator.cpp **** }
 367              		.loc 1 100 1
 368 01f4 03348100 		ld	s0,8(sp)
 369              		.cfi_remember_state
 370              		.cfi_restore 8
 371              		.cfi_def_cfa 2, 16
 372 01f8 13010101 		addi	sp,sp,16
 373              		.cfi_def_cfa_offset 0
 374 01fc 67800000 		jr	ra
 375              	.LVL31:
 376              	.L22:
 377              		.cfi_restore_state
 378              	.LBB32:
 379              	.LBB29:
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 380              		.loc 1 77 5 is_stmt 1
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 381              		.loc 1 77 15 is_stmt 0
 382 0200 23340500 		sd	zero,8(a0)
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 383              		.loc 1 78 5 is_stmt 1
 384 0204 6FF0DFFC 		j	.L26
 385              	.LVL32:
 386              	.L32:
 387 0208 93070700 		mv	a5,a4
 388 020c 6FF05FFC 		j	.L26
 389              	.LVL33:
 390              	.L29:
  83:src/MemoryAllocator.cpp **** }
 391              		.loc 1 83 10
  83:src/MemoryAllocator.cpp **** }
 392              		.loc 1 83 15 is_stmt 0
 393 0210 97070000 		sd	a0,.LANCHOR0+24,a5
 393      23B0A700 
 394 0218 6FF09FFD 		j	.L30
 395              	.LBE29:
 396              	.LBE32:
 397              		.cfi_endproc
 398              	.LFE7:
 400              		.align	2
 401              		.globl	_ZN15MemoryAllocator10__mem_freeEPv
 403              	_ZN15MemoryAllocator10__mem_freeEPv:
 404              	.LFB10:
 101:src/MemoryAllocator.cpp **** 
 102:src/MemoryAllocator.cpp **** // Helper: Try to join cur with the cur->next free segment:
 103:src/MemoryAllocator.cpp **** inline int MemoryAllocator::tryToJoin(BlockHeader* cur)
 104:src/MemoryAllocator.cpp **** {
 105:src/MemoryAllocator.cpp ****     if(!cur) return 0;
GAS LISTING /tmp/ccWLOab8.s 			page 12


 106:src/MemoryAllocator.cpp ****     if(cur->next && (char*)cur + cur->size == (char*)(cur->next))
 107:src/MemoryAllocator.cpp ****     {
 108:src/MemoryAllocator.cpp ****         // Remove cur->next segment:
 109:src/MemoryAllocator.cpp ****         cur->size += cur->next->size;
 110:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 111:src/MemoryAllocator.cpp ****         if(cur->next) cur->next->prev = cur;
 112:src/MemoryAllocator.cpp ****         return 1;
 113:src/MemoryAllocator.cpp ****     } else
 114:src/MemoryAllocator.cpp ****         return 0;
 115:src/MemoryAllocator.cpp **** }
 116:src/MemoryAllocator.cpp **** 
 117:src/MemoryAllocator.cpp **** // Get block from allocated list
 118:src/MemoryAllocator.cpp **** inline MemoryAllocator::BlockHeader* MemoryAllocator::getFromAllocList(void* address)
 119:src/MemoryAllocator.cpp **** {
 120:src/MemoryAllocator.cpp ****     BlockHeader* blk = allocMemHead;
 121:src/MemoryAllocator.cpp ****     for(; blk!=nullptr && (char*)address != (char*)blk + blk->size; blk = blk->next);
 122:src/MemoryAllocator.cpp ****     if(!blk) return nullptr;
 123:src/MemoryAllocator.cpp **** 
 124:src/MemoryAllocator.cpp ****     // Prevezivanje
 125:src/MemoryAllocator.cpp ****     if(blk->prev) blk->prev->next = blk->next;
 126:src/MemoryAllocator.cpp ****     else freeMemHead = blk->next;
 127:src/MemoryAllocator.cpp ****     if(blk->next) blk->next->prev = blk->prev;
 128:src/MemoryAllocator.cpp **** 
 129:src/MemoryAllocator.cpp ****     blk->next = nullptr;
 130:src/MemoryAllocator.cpp ****     blk->prev = nullptr;
 131:src/MemoryAllocator.cpp **** 
 132:src/MemoryAllocator.cpp ****     return blk;
 133:src/MemoryAllocator.cpp **** }
 134:src/MemoryAllocator.cpp **** 
 135:src/MemoryAllocator.cpp **** 
 136:src/MemoryAllocator.cpp **** // Memory deallocation
 137:src/MemoryAllocator.cpp **** int MemoryAllocator::__mem_free(void* address)
 138:src/MemoryAllocator.cpp **** {
 405              		.loc 1 138 1 is_stmt 1
 406              		.cfi_startproc
 407              	.LVL34:
 408 021c 130101FF 		addi	sp,sp,-16
 409              		.cfi_def_cfa_offset 16
 410 0220 23348100 		sd	s0,8(sp)
 411              		.cfi_offset 8, -8
 412 0224 13040101 		addi	s0,sp,16
 413              		.cfi_def_cfa 8, 0
 139:src/MemoryAllocator.cpp ****     // Get block from allocated list
 140:src/MemoryAllocator.cpp ****     BlockHeader* blk = getFromAllocList(address);
 414              		.loc 1 140 5
 415              	.LVL35:
 416              	.LBB41:
 417              	.LBB42:
 120:src/MemoryAllocator.cpp ****     for(; blk!=nullptr && (char*)address != (char*)blk + blk->size; blk = blk->next);
 418              		.loc 1 120 5
 120:src/MemoryAllocator.cpp ****     for(; blk!=nullptr && (char*)address != (char*)blk + blk->size; blk = blk->next);
 419              		.loc 1 120 18 is_stmt 0
 420 0228 97070000 		ld	a5,.LANCHOR0+24
 420      83B70700 
 421              	.LVL36:
 422              	.L36:
 121:src/MemoryAllocator.cpp ****     if(!blk) return nullptr;
GAS LISTING /tmp/ccWLOab8.s 			page 13


 423              		.loc 1 121 5 is_stmt 1
 121:src/MemoryAllocator.cpp ****     if(!blk) return nullptr;
 424              		.loc 1 121 24
 425 0230 638C0700 		beqz	a5,.L35
 121:src/MemoryAllocator.cpp ****     if(!blk) return nullptr;
 426              		.loc 1 121 63 is_stmt 0
 427 0234 03B70701 		ld	a4,16(a5)
 121:src/MemoryAllocator.cpp ****     if(!blk) return nullptr;
 428              		.loc 1 121 56
 429 0238 3387E700 		add	a4,a5,a4
 121:src/MemoryAllocator.cpp ****     if(!blk) return nullptr;
 430              		.loc 1 121 24
 431 023c 6306E500 		beq	a0,a4,.L35
 121:src/MemoryAllocator.cpp ****     if(!blk) return nullptr;
 432              		.loc 1 121 5 is_stmt 1
 121:src/MemoryAllocator.cpp ****     if(!blk) return nullptr;
 433              		.loc 1 121 73 is_stmt 0
 434 0240 83B70700 		ld	a5,0(a5)
 435              	.LVL37:
 121:src/MemoryAllocator.cpp ****     if(!blk) return nullptr;
 436              		.loc 1 121 5
 437 0244 6FF0DFFE 		j	.L36
 438              	.L35:
 122:src/MemoryAllocator.cpp **** 
 439              		.loc 1 122 5 is_stmt 1
 440 0248 63860702 		beqz	a5,.L37
 125:src/MemoryAllocator.cpp ****     else freeMemHead = blk->next;
 441              		.loc 1 125 5
 125:src/MemoryAllocator.cpp ****     else freeMemHead = blk->next;
 442              		.loc 1 125 13 is_stmt 0
 443 024c 03B78700 		ld	a4,8(a5)
 125:src/MemoryAllocator.cpp ****     else freeMemHead = blk->next;
 444              		.loc 1 125 5
 445 0250 63000706 		beqz	a4,.L38
 125:src/MemoryAllocator.cpp ****     else freeMemHead = blk->next;
 446              		.loc 1 125 19 is_stmt 1
 125:src/MemoryAllocator.cpp ****     else freeMemHead = blk->next;
 447              		.loc 1 125 42 is_stmt 0
 448 0254 83B60700 		ld	a3,0(a5)
 125:src/MemoryAllocator.cpp ****     else freeMemHead = blk->next;
 449              		.loc 1 125 35
 450 0258 2330D700 		sd	a3,0(a4)
 451              	.L39:
 127:src/MemoryAllocator.cpp **** 
 452              		.loc 1 127 5 is_stmt 1
 127:src/MemoryAllocator.cpp **** 
 453              		.loc 1 127 13 is_stmt 0
 454 025c 03B70700 		ld	a4,0(a5)
 127:src/MemoryAllocator.cpp **** 
 455              		.loc 1 127 5
 456 0260 63060700 		beqz	a4,.L40
 127:src/MemoryAllocator.cpp **** 
 457              		.loc 1 127 19 is_stmt 1
 127:src/MemoryAllocator.cpp **** 
 458              		.loc 1 127 42 is_stmt 0
 459 0264 83B68700 		ld	a3,8(a5)
 127:src/MemoryAllocator.cpp **** 
GAS LISTING /tmp/ccWLOab8.s 			page 14


 460              		.loc 1 127 35
 461 0268 2334D700 		sd	a3,8(a4)
 462              	.L40:
 129:src/MemoryAllocator.cpp ****     blk->prev = nullptr;
 463              		.loc 1 129 5 is_stmt 1
 129:src/MemoryAllocator.cpp ****     blk->prev = nullptr;
 464              		.loc 1 129 15 is_stmt 0
 465 026c 23B00700 		sd	zero,0(a5)
 130:src/MemoryAllocator.cpp **** 
 466              		.loc 1 130 5 is_stmt 1
 130:src/MemoryAllocator.cpp **** 
 467              		.loc 1 130 15 is_stmt 0
 468 0270 23B40700 		sd	zero,8(a5)
 132:src/MemoryAllocator.cpp **** }
 469              		.loc 1 132 5 is_stmt 1
 470              	.L37:
 471              	.LVL38:
 472              	.LBE42:
 473              	.LBE41:
 141:src/MemoryAllocator.cpp ****     if(!blk) return -1;
 474              		.loc 1 141 5
 475 0274 638A0710 		beqz	a5,.L52
 142:src/MemoryAllocator.cpp **** 
 143:src/MemoryAllocator.cpp ****     // Find where and insert the new segment after cur:
 144:src/MemoryAllocator.cpp ****     putIntoOrderedList(blk, freeMemHead);
 476              		.loc 1 144 5
 477              	.LVL39:
 478              	.LBB44:
 479              	.LBB45:
  72:src/MemoryAllocator.cpp ****     if(!head || (char*)blk < (char*)head)
 480              		.loc 1 72 5
  72:src/MemoryAllocator.cpp ****     if(!head || (char*)blk < (char*)head)
 481              		.loc 1 72 18 is_stmt 0
 482 0278 17070000 		ld	a4,.LANCHOR0
 482      03370700 
 483              	.LVL40:
  73:src/MemoryAllocator.cpp ****         cur = nullptr;
 484              		.loc 1 73 5 is_stmt 1
 485 0280 6304070A 		beqz	a4,.L42
  73:src/MemoryAllocator.cpp ****         cur = nullptr;
 486              		.loc 1 73 14 is_stmt 0
 487 0284 63EEE702 		bltu	a5,a4,.L43
 488              	.LVL41:
 489              	.L45:
  76:src/MemoryAllocator.cpp ****     blk->prev = cur;
 490              		.loc 1 76 9 is_stmt 1
  76:src/MemoryAllocator.cpp ****     blk->prev = cur;
 491              		.loc 1 76 34
 492 0288 93060700 		mv	a3,a4
  76:src/MemoryAllocator.cpp ****     blk->prev = cur;
 493              		.loc 1 76 20 is_stmt 0
 494 028c 03370700 		ld	a4,0(a4)
 495              	.LVL42:
  76:src/MemoryAllocator.cpp ****     blk->prev = cur;
 496              		.loc 1 76 34
 497 0290 63040700 		beqz	a4,.L44
 498 0294 E36AF7FE 		bgtu	a5,a4,.L45
GAS LISTING /tmp/ccWLOab8.s 			page 15


 499              	.L44:
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 500              		.loc 1 77 5 is_stmt 1
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 501              		.loc 1 77 15 is_stmt 0
 502 0298 23B4D700 		sd	a3,8(a5)
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 503              		.loc 1 78 5 is_stmt 1
 504 029c 638A0608 		beqz	a3,.L53
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 505              		.loc 1 78 13
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 506              		.loc 1 78 30 is_stmt 0
 507 02a0 03B70600 		ld	a4,0(a3)
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 508              		.loc 1 78 23
 509 02a4 23B0E700 		sd	a4,0(a5)
 510 02a8 13870600 		mv	a4,a3
 511 02ac 6F008002 		j	.L47
 512              	.LVL43:
 513              	.L38:
 514              	.LBE45:
 515              	.LBE44:
 516              	.LBB48:
 517              	.LBB43:
 126:src/MemoryAllocator.cpp ****     if(blk->next) blk->next->prev = blk->prev;
 518              		.loc 1 126 10 is_stmt 1
 126:src/MemoryAllocator.cpp ****     if(blk->next) blk->next->prev = blk->prev;
 519              		.loc 1 126 29 is_stmt 0
 520 02b0 03B70700 		ld	a4,0(a5)
 126:src/MemoryAllocator.cpp ****     if(blk->next) blk->next->prev = blk->prev;
 521              		.loc 1 126 22
 522 02b4 97060000 		sd	a4,.LANCHOR0,a3
 522      23B0E600 
 523 02bc 6FF01FFA 		j	.L39
 524              	.LVL44:
 525              	.L43:
 526              	.LBE43:
 527              	.LBE48:
 528              	.LBB49:
 529              	.LBB46:
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 530              		.loc 1 77 5 is_stmt 1
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 531              		.loc 1 77 15 is_stmt 0
 532 02c0 23B40700 		sd	zero,8(a5)
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 533              		.loc 1 78 5 is_stmt 1
  74:src/MemoryAllocator.cpp ****     else
 534              		.loc 1 74 13 is_stmt 0
 535 02c4 13070000 		li	a4,0
 536              	.LVL45:
 537              	.L46:
  79:src/MemoryAllocator.cpp **** 
 538              		.loc 1 79 10 is_stmt 1
  79:src/MemoryAllocator.cpp **** 
 539              		.loc 1 79 22 is_stmt 0
GAS LISTING /tmp/ccWLOab8.s 			page 16


 540 02c8 97060000 		ld	a3,.LANCHOR0
 540      83B60600 
  79:src/MemoryAllocator.cpp **** 
 541              		.loc 1 79 20
 542 02d0 23B0D700 		sd	a3,0(a5)
 543              	.L47:
  81:src/MemoryAllocator.cpp ****     if(cur) cur->next = blk;
 544              		.loc 1 81 5 is_stmt 1
  81:src/MemoryAllocator.cpp ****     if(cur) cur->next = blk;
 545              		.loc 1 81 13 is_stmt 0
 546 02d4 83B60700 		ld	a3,0(a5)
  81:src/MemoryAllocator.cpp ****     if(cur) cur->next = blk;
 547              		.loc 1 81 5
 548 02d8 63840600 		beqz	a3,.L48
  81:src/MemoryAllocator.cpp ****     if(cur) cur->next = blk;
 549              		.loc 1 81 19 is_stmt 1
  81:src/MemoryAllocator.cpp ****     if(cur) cur->next = blk;
 550              		.loc 1 81 35 is_stmt 0
 551 02dc 23B4F600 		sd	a5,8(a3)
 552              	.L48:
  82:src/MemoryAllocator.cpp ****     else head = blk;
 553              		.loc 1 82 5 is_stmt 1
 554 02e0 630C0704 		beqz	a4,.L49
  82:src/MemoryAllocator.cpp ****     else head = blk;
 555              		.loc 1 82 13
  82:src/MemoryAllocator.cpp ****     else head = blk;
 556              		.loc 1 82 23 is_stmt 0
 557 02e4 2330F700 		sd	a5,0(a4)
 558              	.L50:
 559              	.LVL46:
 560              	.LBE46:
 561              	.LBE49:
 145:src/MemoryAllocator.cpp **** 
 146:src/MemoryAllocator.cpp ****     // Try to merge with the previous and next segments
 147:src/MemoryAllocator.cpp ****     tryToJoin(blk->prev);
 562              		.loc 1 147 5 is_stmt 1
 563              		.loc 1 147 14 is_stmt 0
 564 02e8 03B78700 		ld	a4,8(a5)
 565              	.LVL47:
 566              	.LBB50:
 567              	.LBB51:
 105:src/MemoryAllocator.cpp ****     if(cur->next && (char*)cur + cur->size == (char*)(cur->next))
 568              		.loc 1 105 5 is_stmt 1
 569 02ec 630C0700 		beqz	a4,.L51
 106:src/MemoryAllocator.cpp ****     {
 570              		.loc 1 106 5
 106:src/MemoryAllocator.cpp ****     {
 571              		.loc 1 106 13 is_stmt 0
 572 02f0 83360700 		ld	a3,0(a4)
 106:src/MemoryAllocator.cpp ****     {
 573              		.loc 1 106 5
 574 02f4 63880600 		beqz	a3,.L51
 106:src/MemoryAllocator.cpp ****     {
 575              		.loc 1 106 39
 576 02f8 03360701 		ld	a2,16(a4)
 106:src/MemoryAllocator.cpp ****     {
 577              		.loc 1 106 32
GAS LISTING /tmp/ccWLOab8.s 			page 17


 578 02fc B305C700 		add	a1,a4,a2
 106:src/MemoryAllocator.cpp ****     {
 579              		.loc 1 106 18
 580 0300 6382B604 		beq	a3,a1,.L58
 581              	.L51:
 582              	.LVL48:
 583              	.LBE51:
 584              	.LBE50:
 148:src/MemoryAllocator.cpp ****     tryToJoin(blk);
 585              		.loc 1 148 5 is_stmt 1
 586              	.LBB53:
 587              	.LBB54:
 105:src/MemoryAllocator.cpp ****     if(cur->next && (char*)cur + cur->size == (char*)(cur->next))
 588              		.loc 1 105 5
 106:src/MemoryAllocator.cpp ****     {
 589              		.loc 1 106 5
 106:src/MemoryAllocator.cpp ****     {
 590              		.loc 1 106 13 is_stmt 0
 591 0304 03B70700 		ld	a4,0(a5)
 106:src/MemoryAllocator.cpp ****     {
 592              		.loc 1 106 5
 593 0308 63040708 		beqz	a4,.L54
 106:src/MemoryAllocator.cpp ****     {
 594              		.loc 1 106 39
 595 030c 83B60701 		ld	a3,16(a5)
 106:src/MemoryAllocator.cpp ****     {
 596              		.loc 1 106 32
 597 0310 3386D700 		add	a2,a5,a3
 106:src/MemoryAllocator.cpp ****     {
 598              		.loc 1 106 18
 599 0314 6308C704 		beq	a4,a2,.L59
 600              	.LBE54:
 601              	.LBE53:
 149:src/MemoryAllocator.cpp **** 
 150:src/MemoryAllocator.cpp ****     return 0;
 602              		.loc 1 150 12
 603 0318 13050000 		li	a0,0
 604              	.LVL49:
 605              	.L41:
 151:src/MemoryAllocator.cpp **** }
 606              		.loc 1 151 1
 607 031c 03348100 		ld	s0,8(sp)
 608              		.cfi_remember_state
 609              		.cfi_restore 8
 610              		.cfi_def_cfa 2, 16
 611 0320 13010101 		addi	sp,sp,16
 612              		.cfi_def_cfa_offset 0
 613 0324 67800000 		jr	ra
 614              	.LVL50:
 615              	.L42:
 616              		.cfi_restore_state
 617              	.LBB57:
 618              	.LBB47:
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 619              		.loc 1 77 5 is_stmt 1
  77:src/MemoryAllocator.cpp ****     if(cur) blk->next = cur->next;
 620              		.loc 1 77 15 is_stmt 0
GAS LISTING /tmp/ccWLOab8.s 			page 18


 621 0328 23B40700 		sd	zero,8(a5)
  78:src/MemoryAllocator.cpp ****     else blk->next = head;
 622              		.loc 1 78 5 is_stmt 1
 623 032c 6FF0DFF9 		j	.L46
 624              	.LVL51:
 625              	.L53:
 626 0330 13870600 		mv	a4,a3
 627 0334 6FF05FF9 		j	.L46
 628              	.LVL52:
 629              	.L49:
  83:src/MemoryAllocator.cpp **** }
 630              		.loc 1 83 10
  83:src/MemoryAllocator.cpp **** }
 631              		.loc 1 83 15 is_stmt 0
 632 0338 17070000 		sd	a5,.LANCHOR0,a4
 632      2330F700 
 633 0340 6FF09FFA 		j	.L50
 634              	.LVL53:
 635              	.L58:
 636              	.LBE47:
 637              	.LBE57:
 638              	.LBB58:
 639              	.LBB52:
 109:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 640              		.loc 1 109 9 is_stmt 1
 109:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 641              		.loc 1 109 33 is_stmt 0
 642 0344 83B50601 		ld	a1,16(a3)
 109:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 643              		.loc 1 109 19
 644 0348 3306B600 		add	a2,a2,a1
 645 034c 2338C700 		sd	a2,16(a4)
 110:src/MemoryAllocator.cpp ****         if(cur->next) cur->next->prev = cur;
 646              		.loc 1 110 9 is_stmt 1
 110:src/MemoryAllocator.cpp ****         if(cur->next) cur->next->prev = cur;
 647              		.loc 1 110 32 is_stmt 0
 648 0350 83B60600 		ld	a3,0(a3)
 110:src/MemoryAllocator.cpp ****         if(cur->next) cur->next->prev = cur;
 649              		.loc 1 110 19
 650 0354 2330D700 		sd	a3,0(a4)
 111:src/MemoryAllocator.cpp ****         return 1;
 651              		.loc 1 111 9 is_stmt 1
 652 0358 E38606FA 		beqz	a3,.L51
 111:src/MemoryAllocator.cpp ****         return 1;
 653              		.loc 1 111 23
 111:src/MemoryAllocator.cpp ****         return 1;
 654              		.loc 1 111 39 is_stmt 0
 655 035c 23B4E600 		sd	a4,8(a3)
 656 0360 6FF05FFA 		j	.L51
 657              	.LVL54:
 658              	.L59:
 659              	.LBE52:
 660              	.LBE58:
 661              	.LBB59:
 662              	.LBB55:
 109:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 663              		.loc 1 109 9 is_stmt 1
GAS LISTING /tmp/ccWLOab8.s 			page 19


 109:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 664              		.loc 1 109 33 is_stmt 0
 665 0364 03360701 		ld	a2,16(a4)
 109:src/MemoryAllocator.cpp ****         cur->next = cur->next->next;
 666              		.loc 1 109 19
 667 0368 B386C600 		add	a3,a3,a2
 668 036c 23B8D700 		sd	a3,16(a5)
 110:src/MemoryAllocator.cpp ****         if(cur->next) cur->next->prev = cur;
 669              		.loc 1 110 9 is_stmt 1
 110:src/MemoryAllocator.cpp ****         if(cur->next) cur->next->prev = cur;
 670              		.loc 1 110 32 is_stmt 0
 671 0370 03370700 		ld	a4,0(a4)
 110:src/MemoryAllocator.cpp ****         if(cur->next) cur->next->prev = cur;
 672              		.loc 1 110 19
 673 0374 23B0E700 		sd	a4,0(a5)
 111:src/MemoryAllocator.cpp ****         return 1;
 674              		.loc 1 111 9 is_stmt 1
 675 0378 63000702 		beqz	a4,.L56
 111:src/MemoryAllocator.cpp ****         return 1;
 676              		.loc 1 111 23
 111:src/MemoryAllocator.cpp ****         return 1;
 677              		.loc 1 111 39 is_stmt 0
 678 037c 2334F700 		sd	a5,8(a4)
 679              	.LBE55:
 680              	.LBE59:
 150:src/MemoryAllocator.cpp **** }
 681              		.loc 1 150 12
 682 0380 13050000 		li	a0,0
 683              	.LVL55:
 684              	.LBB60:
 685              	.LBB56:
 686 0384 6FF09FF9 		j	.L41
 687              	.LVL56:
 688              	.L52:
 689              	.LBE56:
 690              	.LBE60:
 141:src/MemoryAllocator.cpp **** 
 691              		.loc 1 141 22
 692 0388 1305F0FF 		li	a0,-1
 693              	.LVL57:
 694 038c 6FF01FF9 		j	.L41
 695              	.LVL58:
 696              	.L54:
 150:src/MemoryAllocator.cpp **** }
 697              		.loc 1 150 12
 698 0390 13050000 		li	a0,0
 699              	.LVL59:
 700 0394 6FF09FF8 		j	.L41
 701              	.LVL60:
 702              	.L56:
 703 0398 13050000 		li	a0,0
 704              	.LVL61:
 705 039c 6FF01FF8 		j	.L41
 706              		.cfi_endproc
 707              	.LFE10:
 709              		.globl	_ZN15MemoryAllocator12allocMemHeadE
 710              		.globl	_ZN15MemoryAllocator11freeMemHeadE
GAS LISTING /tmp/ccWLOab8.s 			page 20


 711              		.bss
 712              		.align	3
 713              		.set	.LANCHOR0,. + 0
 716              	_ZN15MemoryAllocator11freeMemHeadE:
 717 0000 00000000 		.zero	8
 717      00000000 
 720              	_ZGVZN15MemoryAllocator11getInstanceEvE8instance:
 721 0008 00000000 		.zero	8
 721      00000000 
 724              	_ZZN15MemoryAllocator11getInstanceEvE8instance:
 725 0010 00       		.zero	1
 726 0011 00000000 		.zero	7
 726      000000
 729              	_ZN15MemoryAllocator12allocMemHeadE:
 730 0018 00000000 		.zero	8
 730      00000000 
 731              		.text
 732              	.Letext0:
 733              		.file 2 "src/../h/../lib/hw.h"
 734              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccWLOab8.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccWLOab8.s:9      .text:0000000000000000 _ZN15MemoryAllocatorC2Ev
     /tmp/ccWLOab8.s:13     .text:0000000000000000 .L0 
     /tmp/ccWLOab8.s:15     .text:0000000000000000 .L0 
     /tmp/ccWLOab8.s:16     .text:0000000000000004 .L0 
     /tmp/ccWLOab8.s:18     .text:0000000000000008 .L0 
     /tmp/ccWLOab8.s:20     .text:000000000000000c .L0 
     /tmp/ccWLOab8.s:23     .text:000000000000000c .L0 
     /tmp/ccWLOab8.s:24     .text:000000000000000c .L0 
     /tmp/ccWLOab8.s:29     .text:0000000000000024 .L0 
     /tmp/ccWLOab8.s:30     .text:0000000000000024 .L0 
     /tmp/ccWLOab8.s:32     .text:0000000000000028 .L0 
     /tmp/ccWLOab8.s:33     .text:0000000000000028 .L0 
     /tmp/ccWLOab8.s:35     .text:000000000000002c .L0 
     /tmp/ccWLOab8.s:37     .text:0000000000000030 .L0 
     /tmp/ccWLOab8.s:38     .text:0000000000000030 .L0 
     /tmp/ccWLOab8.s:43     .text:0000000000000044 .L0 
     /tmp/ccWLOab8.s:45     .text:0000000000000048 .L0 
     /tmp/ccWLOab8.s:48     .text:000000000000004c .L0 
     /tmp/ccWLOab8.s:49     .text:0000000000000050 .L0 
     /tmp/ccWLOab8.s:50     .text:0000000000000050 .L0 
     /tmp/ccWLOab8.s:52     .text:0000000000000054 .L0 
     /tmp/ccWLOab8.s:54     .text:0000000000000058 .L0 
     /tmp/ccWLOab8.s:9      .text:0000000000000000 _ZN15MemoryAllocatorC1Ev
     /tmp/ccWLOab8.s:62     .text:0000000000000058 _ZN15MemoryAllocator11getInstanceEv
     /tmp/ccWLOab8.s:65     .text:0000000000000058 .L0 
     /tmp/ccWLOab8.s:66     .text:0000000000000058 .L0 
     /tmp/ccWLOab8.s:67     .text:0000000000000058 .L0 
     /tmp/ccWLOab8.s:68     .text:0000000000000058 .L0 
     /tmp/ccWLOab8.s:71     .text:0000000000000064 .L0 
     /tmp/ccWLOab8.s:72     .text:0000000000000064 .L0 
     /tmp/ccWLOab8.s:76     .text:0000000000000070 .L0 
     /tmp/ccWLOab8.s:77     .text:0000000000000074 .L0 
     /tmp/ccWLOab8.s:80     .text:000000000000007c .L0 
     /tmp/ccWLOab8.s:81     .text:000000000000007c .L0 
     /tmp/ccWLOab8.s:83     .text:0000000000000080 .L0 
     /tmp/ccWLOab8.s:85     .text:0000000000000080 .L0 
     /tmp/ccWLOab8.s:91     .text:000000000000009c .L0 
     /tmp/ccWLOab8.s:92     .text:000000000000009c .L0 
     /tmp/ccWLOab8.s:94     .text:00000000000000a8 .L0 
     /tmp/ccWLOab8.s:96     .text:00000000000000ac .L0 
     /tmp/ccWLOab8.s:97     .text:00000000000000ac .L0 
     /tmp/ccWLOab8.s:99     .text:00000000000000b0 .L0 
     /tmp/ccWLOab8.s:101    .text:00000000000000b4 .L0 
     /tmp/ccWLOab8.s:107    .text:00000000000000b4 _ZN15MemoryAllocator11__mem_allocEm
     /tmp/ccWLOab8.s:110    .text:00000000000000b4 .L0 
     /tmp/ccWLOab8.s:112    .text:00000000000000b4 .L0 
     /tmp/ccWLOab8.s:113    .text:00000000000000b8 .L0 
     /tmp/ccWLOab8.s:115    .text:00000000000000bc .L0 
     /tmp/ccWLOab8.s:117    .text:00000000000000c0 .L0 
     /tmp/ccWLOab8.s:123    .text:00000000000000c4 .L0 
     /tmp/ccWLOab8.s:124    .text:00000000000000c4 .L0 
     /tmp/ccWLOab8.s:125    .text:00000000000000c4 .L0 
     /tmp/ccWLOab8.s:129    .text:00000000000000cc .L0 
     /tmp/ccWLOab8.s:130    .text:00000000000000cc .L0 
     /tmp/ccWLOab8.s:132    .text:00000000000000d0 .L0 
GAS LISTING /tmp/ccWLOab8.s 			page 22


     /tmp/ccWLOab8.s:133    .text:00000000000000d0 .L0 
     /tmp/ccWLOab8.s:135    .text:00000000000000d4 .L0 
     /tmp/ccWLOab8.s:137    .text:00000000000000d8 .L0 
     /tmp/ccWLOab8.s:138    .text:00000000000000d8 .L0 
     /tmp/ccWLOab8.s:141    .text:00000000000000dc .L0 
     /tmp/ccWLOab8.s:147    .text:00000000000000e0 .L0 
     /tmp/ccWLOab8.s:148    .text:00000000000000e0 .L0 
     /tmp/ccWLOab8.s:153    .text:00000000000000e4 .L0 
     /tmp/ccWLOab8.s:154    .text:00000000000000e4 .L0 
     /tmp/ccWLOab8.s:155    .text:00000000000000e4 .L0 
     /tmp/ccWLOab8.s:157    .text:00000000000000e8 .L0 
     /tmp/ccWLOab8.s:159    .text:00000000000000ec .L0 
     /tmp/ccWLOab8.s:161    .text:00000000000000f0 .L0 
     /tmp/ccWLOab8.s:165    .text:00000000000000f4 .L0 
     /tmp/ccWLOab8.s:166    .text:00000000000000f4 .L0 
     /tmp/ccWLOab8.s:168    .text:00000000000000f8 .L0 
     /tmp/ccWLOab8.s:172    .text:00000000000000fc .L0 
     /tmp/ccWLOab8.s:176    .text:0000000000000104 .L0 
     /tmp/ccWLOab8.s:177    .text:0000000000000104 .L0 
     /tmp/ccWLOab8.s:179    .text:0000000000000108 .L0 
     /tmp/ccWLOab8.s:180    .text:0000000000000108 .L0 
     /tmp/ccWLOab8.s:183    .text:000000000000010c .L0 
     /tmp/ccWLOab8.s:184    .text:000000000000010c .L0 
     /tmp/ccWLOab8.s:187    .text:0000000000000110 .L0 
     /tmp/ccWLOab8.s:188    .text:0000000000000110 .L0 
     /tmp/ccWLOab8.s:191    .text:0000000000000114 .L0 
     /tmp/ccWLOab8.s:193    .text:0000000000000118 .L0 
     /tmp/ccWLOab8.s:194    .text:0000000000000118 .L0 
     /tmp/ccWLOab8.s:198    .text:000000000000011c .L0 
     /tmp/ccWLOab8.s:199    .text:000000000000011c .L0 
     /tmp/ccWLOab8.s:201    .text:0000000000000120 .L0 
     /tmp/ccWLOab8.s:203    .text:0000000000000124 .L0 
     /tmp/ccWLOab8.s:204    .text:0000000000000124 .L0 
     /tmp/ccWLOab8.s:206    .text:0000000000000128 .L0 
     /tmp/ccWLOab8.s:208    .text:000000000000012c .L0 
     /tmp/ccWLOab8.s:209    .text:000000000000012c .L0 
     /tmp/ccWLOab8.s:212    .text:0000000000000130 .L0 
     /tmp/ccWLOab8.s:213    .text:0000000000000130 .L0 
     /tmp/ccWLOab8.s:215    .text:0000000000000134 .L0 
     /tmp/ccWLOab8.s:217    .text:0000000000000138 .L0 
     /tmp/ccWLOab8.s:218    .text:0000000000000138 .L0 
     /tmp/ccWLOab8.s:221    .text:000000000000013c .L0 
     /tmp/ccWLOab8.s:227    .text:0000000000000140 .L0 
     /tmp/ccWLOab8.s:228    .text:0000000000000140 .L0 
     /tmp/ccWLOab8.s:230    .text:0000000000000144 .L0 
     /tmp/ccWLOab8.s:231    .text:0000000000000144 .L0 
     /tmp/ccWLOab8.s:238    .text:0000000000000148 .L0 
     /tmp/ccWLOab8.s:239    .text:0000000000000148 .L0 
     /tmp/ccWLOab8.s:240    .text:0000000000000148 .L0 
     /tmp/ccWLOab8.s:243    .text:0000000000000150 .L0 
     /tmp/ccWLOab8.s:245    .text:0000000000000154 .L0 
     /tmp/ccWLOab8.s:249    .text:0000000000000158 .L0 
     /tmp/ccWLOab8.s:250    .text:0000000000000158 .L0 
     /tmp/ccWLOab8.s:252    .text:000000000000015c .L0 
     /tmp/ccWLOab8.s:255    .text:0000000000000160 .L0 
     /tmp/ccWLOab8.s:259    .text:0000000000000168 .L0 
     /tmp/ccWLOab8.s:260    .text:0000000000000168 .L0 
GAS LISTING /tmp/ccWLOab8.s 			page 23


     /tmp/ccWLOab8.s:262    .text:000000000000016c .L0 
     /tmp/ccWLOab8.s:264    .text:0000000000000170 .L0 
     /tmp/ccWLOab8.s:265    .text:0000000000000170 .L0 
     /tmp/ccWLOab8.s:267    .text:0000000000000174 .L0 
     /tmp/ccWLOab8.s:277    .text:0000000000000180 .L0 
     /tmp/ccWLOab8.s:284    .text:0000000000000188 .L0 
     /tmp/ccWLOab8.s:285    .text:0000000000000188 .L0 
     /tmp/ccWLOab8.s:291    .text:0000000000000194 .L0 
     /tmp/ccWLOab8.s:292    .text:0000000000000194 .L0 
     /tmp/ccWLOab8.s:295    .text:0000000000000198 .L0 
     /tmp/ccWLOab8.s:297    .text:000000000000019c .L0 
     /tmp/ccWLOab8.s:298    .text:000000000000019c .L0 
     /tmp/ccWLOab8.s:301    .text:00000000000001a0 .L0 
     /tmp/ccWLOab8.s:304    .text:00000000000001a4 .L0 
     /tmp/ccWLOab8.s:305    .text:00000000000001a4 .L0 
     /tmp/ccWLOab8.s:307    .text:00000000000001a8 .L0 
     /tmp/ccWLOab8.s:309    .text:00000000000001ac .L0 
     /tmp/ccWLOab8.s:310    .text:00000000000001ac .L0 
     /tmp/ccWLOab8.s:312    .text:00000000000001b0 .L0 
     /tmp/ccWLOab8.s:317    .text:00000000000001b8 .L0 
     /tmp/ccWLOab8.s:318    .text:00000000000001b8 .L0 
     /tmp/ccWLOab8.s:320    .text:00000000000001bc .L0 
     /tmp/ccWLOab8.s:331    .text:00000000000001c8 .L0 
     /tmp/ccWLOab8.s:332    .text:00000000000001c8 .L0 
     /tmp/ccWLOab8.s:334    .text:00000000000001cc .L0 
     /tmp/ccWLOab8.s:335    .text:00000000000001cc .L0 
     /tmp/ccWLOab8.s:339    .text:00000000000001d0 .L0 
     /tmp/ccWLOab8.s:340    .text:00000000000001d0 .L0 
     /tmp/ccWLOab8.s:342    .text:00000000000001d8 .L0 
     /tmp/ccWLOab8.s:345    .text:00000000000001dc .L0 
     /tmp/ccWLOab8.s:346    .text:00000000000001dc .L0 
     /tmp/ccWLOab8.s:348    .text:00000000000001e0 .L0 
     /tmp/ccWLOab8.s:350    .text:00000000000001e4 .L0 
     /tmp/ccWLOab8.s:351    .text:00000000000001e4 .L0 
     /tmp/ccWLOab8.s:354    .text:00000000000001e8 .L0 
     /tmp/ccWLOab8.s:356    .text:00000000000001ec .L0 
     /tmp/ccWLOab8.s:357    .text:00000000000001ec .L0 
     /tmp/ccWLOab8.s:363    .text:00000000000001f0 .L0 
     /tmp/ccWLOab8.s:364    .text:00000000000001f0 .L0 
     /tmp/ccWLOab8.s:368    .text:00000000000001f4 .L0 
     /tmp/ccWLOab8.s:369    .text:00000000000001f8 .L0 
     /tmp/ccWLOab8.s:370    .text:00000000000001f8 .L0 
     /tmp/ccWLOab8.s:371    .text:00000000000001f8 .L0 
     /tmp/ccWLOab8.s:373    .text:00000000000001fc .L0 
     /tmp/ccWLOab8.s:377    .text:0000000000000200 .L0 
     /tmp/ccWLOab8.s:381    .text:0000000000000200 .L0 
     /tmp/ccWLOab8.s:382    .text:0000000000000200 .L0 
     /tmp/ccWLOab8.s:384    .text:0000000000000204 .L0 
     /tmp/ccWLOab8.s:392    .text:0000000000000210 .L0 
     /tmp/ccWLOab8.s:393    .text:0000000000000210 .L0 
     /tmp/ccWLOab8.s:397    .text:000000000000021c .L0 
     /tmp/ccWLOab8.s:403    .text:000000000000021c _ZN15MemoryAllocator10__mem_freeEPv
     /tmp/ccWLOab8.s:406    .text:000000000000021c .L0 
     /tmp/ccWLOab8.s:408    .text:000000000000021c .L0 
     /tmp/ccWLOab8.s:409    .text:0000000000000220 .L0 
     /tmp/ccWLOab8.s:411    .text:0000000000000224 .L0 
     /tmp/ccWLOab8.s:413    .text:0000000000000228 .L0 
GAS LISTING /tmp/ccWLOab8.s 			page 24


     /tmp/ccWLOab8.s:418    .text:0000000000000228 .L0 
     /tmp/ccWLOab8.s:419    .text:0000000000000228 .L0 
     /tmp/ccWLOab8.s:420    .text:0000000000000228 .L0 
     /tmp/ccWLOab8.s:424    .text:0000000000000230 .L0 
     /tmp/ccWLOab8.s:425    .text:0000000000000230 .L0 
     /tmp/ccWLOab8.s:427    .text:0000000000000234 .L0 
     /tmp/ccWLOab8.s:429    .text:0000000000000238 .L0 
     /tmp/ccWLOab8.s:431    .text:000000000000023c .L0 
     /tmp/ccWLOab8.s:433    .text:0000000000000240 .L0 
     /tmp/ccWLOab8.s:434    .text:0000000000000240 .L0 
     /tmp/ccWLOab8.s:437    .text:0000000000000244 .L0 
     /tmp/ccWLOab8.s:440    .text:0000000000000248 .L0 
     /tmp/ccWLOab8.s:442    .text:000000000000024c .L0 
     /tmp/ccWLOab8.s:443    .text:000000000000024c .L0 
     /tmp/ccWLOab8.s:445    .text:0000000000000250 .L0 
     /tmp/ccWLOab8.s:447    .text:0000000000000254 .L0 
     /tmp/ccWLOab8.s:448    .text:0000000000000254 .L0 
     /tmp/ccWLOab8.s:450    .text:0000000000000258 .L0 
     /tmp/ccWLOab8.s:453    .text:000000000000025c .L0 
     /tmp/ccWLOab8.s:454    .text:000000000000025c .L0 
     /tmp/ccWLOab8.s:456    .text:0000000000000260 .L0 
     /tmp/ccWLOab8.s:458    .text:0000000000000264 .L0 
     /tmp/ccWLOab8.s:459    .text:0000000000000264 .L0 
     /tmp/ccWLOab8.s:461    .text:0000000000000268 .L0 
     /tmp/ccWLOab8.s:464    .text:000000000000026c .L0 
     /tmp/ccWLOab8.s:465    .text:000000000000026c .L0 
     /tmp/ccWLOab8.s:467    .text:0000000000000270 .L0 
     /tmp/ccWLOab8.s:468    .text:0000000000000270 .L0 
     /tmp/ccWLOab8.s:474    .text:0000000000000274 .L0 
     /tmp/ccWLOab8.s:475    .text:0000000000000274 .L0 
     /tmp/ccWLOab8.s:480    .text:0000000000000278 .L0 
     /tmp/ccWLOab8.s:481    .text:0000000000000278 .L0 
     /tmp/ccWLOab8.s:482    .text:0000000000000278 .L0 
     /tmp/ccWLOab8.s:485    .text:0000000000000280 .L0 
     /tmp/ccWLOab8.s:487    .text:0000000000000284 .L0 
     /tmp/ccWLOab8.s:491    .text:0000000000000288 .L0 
     /tmp/ccWLOab8.s:492    .text:0000000000000288 .L0 
     /tmp/ccWLOab8.s:494    .text:000000000000028c .L0 
     /tmp/ccWLOab8.s:497    .text:0000000000000290 .L0 
     /tmp/ccWLOab8.s:501    .text:0000000000000298 .L0 
     /tmp/ccWLOab8.s:502    .text:0000000000000298 .L0 
     /tmp/ccWLOab8.s:504    .text:000000000000029c .L0 
     /tmp/ccWLOab8.s:506    .text:00000000000002a0 .L0 
     /tmp/ccWLOab8.s:507    .text:00000000000002a0 .L0 
     /tmp/ccWLOab8.s:509    .text:00000000000002a4 .L0 
     /tmp/ccWLOab8.s:519    .text:00000000000002b0 .L0 
     /tmp/ccWLOab8.s:520    .text:00000000000002b0 .L0 
     /tmp/ccWLOab8.s:522    .text:00000000000002b4 .L0 
     /tmp/ccWLOab8.s:531    .text:00000000000002c0 .L0 
     /tmp/ccWLOab8.s:532    .text:00000000000002c0 .L0 
     /tmp/ccWLOab8.s:534    .text:00000000000002c4 .L0 
     /tmp/ccWLOab8.s:535    .text:00000000000002c4 .L0 
     /tmp/ccWLOab8.s:539    .text:00000000000002c8 .L0 
     /tmp/ccWLOab8.s:540    .text:00000000000002c8 .L0 
     /tmp/ccWLOab8.s:542    .text:00000000000002d0 .L0 
     /tmp/ccWLOab8.s:545    .text:00000000000002d4 .L0 
     /tmp/ccWLOab8.s:546    .text:00000000000002d4 .L0 
GAS LISTING /tmp/ccWLOab8.s 			page 25


     /tmp/ccWLOab8.s:548    .text:00000000000002d8 .L0 
     /tmp/ccWLOab8.s:550    .text:00000000000002dc .L0 
     /tmp/ccWLOab8.s:551    .text:00000000000002dc .L0 
     /tmp/ccWLOab8.s:554    .text:00000000000002e0 .L0 
     /tmp/ccWLOab8.s:556    .text:00000000000002e4 .L0 
     /tmp/ccWLOab8.s:557    .text:00000000000002e4 .L0 
     /tmp/ccWLOab8.s:563    .text:00000000000002e8 .L0 
     /tmp/ccWLOab8.s:564    .text:00000000000002e8 .L0 
     /tmp/ccWLOab8.s:569    .text:00000000000002ec .L0 
     /tmp/ccWLOab8.s:571    .text:00000000000002f0 .L0 
     /tmp/ccWLOab8.s:572    .text:00000000000002f0 .L0 
     /tmp/ccWLOab8.s:574    .text:00000000000002f4 .L0 
     /tmp/ccWLOab8.s:576    .text:00000000000002f8 .L0 
     /tmp/ccWLOab8.s:578    .text:00000000000002fc .L0 
     /tmp/ccWLOab8.s:580    .text:0000000000000300 .L0 
     /tmp/ccWLOab8.s:588    .text:0000000000000304 .L0 
     /tmp/ccWLOab8.s:589    .text:0000000000000304 .L0 
     /tmp/ccWLOab8.s:590    .text:0000000000000304 .L0 
     /tmp/ccWLOab8.s:591    .text:0000000000000304 .L0 
     /tmp/ccWLOab8.s:593    .text:0000000000000308 .L0 
     /tmp/ccWLOab8.s:595    .text:000000000000030c .L0 
     /tmp/ccWLOab8.s:597    .text:0000000000000310 .L0 
     /tmp/ccWLOab8.s:599    .text:0000000000000314 .L0 
     /tmp/ccWLOab8.s:603    .text:0000000000000318 .L0 
     /tmp/ccWLOab8.s:607    .text:000000000000031c .L0 
     /tmp/ccWLOab8.s:608    .text:0000000000000320 .L0 
     /tmp/ccWLOab8.s:609    .text:0000000000000320 .L0 
     /tmp/ccWLOab8.s:610    .text:0000000000000320 .L0 
     /tmp/ccWLOab8.s:612    .text:0000000000000324 .L0 
     /tmp/ccWLOab8.s:616    .text:0000000000000328 .L0 
     /tmp/ccWLOab8.s:620    .text:0000000000000328 .L0 
     /tmp/ccWLOab8.s:621    .text:0000000000000328 .L0 
     /tmp/ccWLOab8.s:623    .text:000000000000032c .L0 
     /tmp/ccWLOab8.s:631    .text:0000000000000338 .L0 
     /tmp/ccWLOab8.s:632    .text:0000000000000338 .L0 
     /tmp/ccWLOab8.s:641    .text:0000000000000344 .L0 
     /tmp/ccWLOab8.s:642    .text:0000000000000344 .L0 
     /tmp/ccWLOab8.s:644    .text:0000000000000348 .L0 
     /tmp/ccWLOab8.s:647    .text:0000000000000350 .L0 
     /tmp/ccWLOab8.s:648    .text:0000000000000350 .L0 
     /tmp/ccWLOab8.s:650    .text:0000000000000354 .L0 
     /tmp/ccWLOab8.s:652    .text:0000000000000358 .L0 
     /tmp/ccWLOab8.s:654    .text:000000000000035c .L0 
     /tmp/ccWLOab8.s:655    .text:000000000000035c .L0 
     /tmp/ccWLOab8.s:664    .text:0000000000000364 .L0 
     /tmp/ccWLOab8.s:665    .text:0000000000000364 .L0 
     /tmp/ccWLOab8.s:667    .text:0000000000000368 .L0 
     /tmp/ccWLOab8.s:670    .text:0000000000000370 .L0 
     /tmp/ccWLOab8.s:671    .text:0000000000000370 .L0 
     /tmp/ccWLOab8.s:673    .text:0000000000000374 .L0 
     /tmp/ccWLOab8.s:675    .text:0000000000000378 .L0 
     /tmp/ccWLOab8.s:677    .text:000000000000037c .L0 
     /tmp/ccWLOab8.s:678    .text:000000000000037c .L0 
     /tmp/ccWLOab8.s:682    .text:0000000000000380 .L0 
     /tmp/ccWLOab8.s:692    .text:0000000000000388 .L0 
     /tmp/ccWLOab8.s:698    .text:0000000000000390 .L0 
     /tmp/ccWLOab8.s:706    .text:00000000000003a0 .L0 
GAS LISTING /tmp/ccWLOab8.s 			page 26


     /tmp/ccWLOab8.s:729    .bss:0000000000000018 _ZN15MemoryAllocator12allocMemHeadE
     /tmp/ccWLOab8.s:716    .bss:0000000000000000 _ZN15MemoryAllocator11freeMemHeadE
     /tmp/ccWLOab8.s:713    .bss:0000000000000000 .LANCHOR0
     /tmp/ccWLOab8.s:720    .bss:0000000000000008 _ZGVZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccWLOab8.s:724    .bss:0000000000000010 _ZZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccWLOab8.s:735    .text:00000000000003a0 .L0 
     /tmp/ccWLOab8.s:24     .text:000000000000000c .L0 
     /tmp/ccWLOab8.s:26     .text:0000000000000018 .L0 
     /tmp/ccWLOab8.s:38     .text:0000000000000030 .L0 
     /tmp/ccWLOab8.s:68     .text:0000000000000058 .L0 
     /tmp/ccWLOab8.s:72     .text:0000000000000064 .L0 
     /tmp/ccWLOab8.s:85     .text:0000000000000080 .L0 
     /tmp/ccWLOab8.s:89     .text:0000000000000094 .L0 
     /tmp/ccWLOab8.s:92     .text:000000000000009c .L0 
     /tmp/ccWLOab8.s:125    .text:00000000000000c4 .L0 
     /tmp/ccWLOab8.s:240    .text:0000000000000148 .L0 
     /tmp/ccWLOab8.s:285    .text:0000000000000188 .L0 
     /tmp/ccWLOab8.s:320    .text:00000000000001bc .L0 
     /tmp/ccWLOab8.s:340    .text:00000000000001d0 .L0 
     /tmp/ccWLOab8.s:393    .text:0000000000000210 .L0 
     /tmp/ccWLOab8.s:420    .text:0000000000000228 .L0 
     /tmp/ccWLOab8.s:482    .text:0000000000000278 .L0 
     /tmp/ccWLOab8.s:522    .text:00000000000002b4 .L0 
     /tmp/ccWLOab8.s:540    .text:00000000000002c8 .L0 
     /tmp/ccWLOab8.s:632    .text:0000000000000338 .L0 
     /tmp/ccWLOab8.s:74     .text:0000000000000070 .L9
     /tmp/ccWLOab8.s:142    .text:00000000000000e0 .L11
     /tmp/ccWLOab8.s:127    .text:00000000000000cc .L12
     /tmp/ccWLOab8.s:366    .text:00000000000001f4 .L10
     /tmp/ccWLOab8.s:271    .text:0000000000000180 .L31
     /tmp/ccWLOab8.s:288    .text:0000000000000194 .L15
     /tmp/ccWLOab8.s:280    .text:0000000000000188 .L16
     /tmp/ccWLOab8.s:210    .text:0000000000000130 .L18
     /tmp/ccWLOab8.s:376    .text:0000000000000200 .L22
     /tmp/ccWLOab8.s:324    .text:00000000000001c8 .L23
     /tmp/ccWLOab8.s:257    .text:0000000000000168 .L24
     /tmp/ccWLOab8.s:247    .text:0000000000000158 .L25
     /tmp/ccWLOab8.s:386    .text:0000000000000208 .L32
     /tmp/ccWLOab8.s:343    .text:00000000000001dc .L27
     /tmp/ccWLOab8.s:162    .text:00000000000000f4 .L14
     /tmp/ccWLOab8.s:196    .text:000000000000011c .L17
     /tmp/ccWLOab8.s:315    .text:00000000000001b8 .L20
     /tmp/ccWLOab8.s:223    .text:0000000000000140 .L19
     /tmp/ccWLOab8.s:302    .text:00000000000001a4 .L21
     /tmp/ccWLOab8.s:352    .text:00000000000001e8 .L28
     /tmp/ccWLOab8.s:390    .text:0000000000000210 .L29
     /tmp/ccWLOab8.s:337    .text:00000000000001d0 .L26
     /tmp/ccWLOab8.s:358    .text:00000000000001f0 .L30
     /tmp/ccWLOab8.s:438    .text:0000000000000248 .L35
     /tmp/ccWLOab8.s:422    .text:0000000000000230 .L36
     /tmp/ccWLOab8.s:470    .text:0000000000000274 .L37
     /tmp/ccWLOab8.s:513    .text:00000000000002b0 .L38
     /tmp/ccWLOab8.s:462    .text:000000000000026c .L40
     /tmp/ccWLOab8.s:688    .text:0000000000000388 .L52
     /tmp/ccWLOab8.s:615    .text:0000000000000328 .L42
     /tmp/ccWLOab8.s:525    .text:00000000000002c0 .L43
     /tmp/ccWLOab8.s:499    .text:0000000000000298 .L44
GAS LISTING /tmp/ccWLOab8.s 			page 27


     /tmp/ccWLOab8.s:489    .text:0000000000000288 .L45
     /tmp/ccWLOab8.s:625    .text:0000000000000330 .L53
     /tmp/ccWLOab8.s:543    .text:00000000000002d4 .L47
     /tmp/ccWLOab8.s:451    .text:000000000000025c .L39
     /tmp/ccWLOab8.s:552    .text:00000000000002e0 .L48
     /tmp/ccWLOab8.s:629    .text:0000000000000338 .L49
     /tmp/ccWLOab8.s:581    .text:0000000000000304 .L51
     /tmp/ccWLOab8.s:635    .text:0000000000000344 .L58
     /tmp/ccWLOab8.s:696    .text:0000000000000390 .L54
     /tmp/ccWLOab8.s:658    .text:0000000000000364 .L59
     /tmp/ccWLOab8.s:537    .text:00000000000002c8 .L46
     /tmp/ccWLOab8.s:558    .text:00000000000002e8 .L50
     /tmp/ccWLOab8.s:702    .text:0000000000000398 .L56
     /tmp/ccWLOab8.s:605    .text:000000000000031c .L41
     /tmp/ccWLOab8.s:1409   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccWLOab8.s:2715   .debug_str:00000000000001a8 .LASF47
     /tmp/ccWLOab8.s:2741   .debug_str:000000000000034f .LASF48
     /tmp/ccWLOab8.s:2743   .debug_str:0000000000000367 .LASF49
     /tmp/ccWLOab8.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccWLOab8.s:732    .text:00000000000003a0 .Letext0
     /tmp/ccWLOab8.s:2667   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccWLOab8.s:2723   .debug_str:00000000000002a4 .LASF0
     /tmp/ccWLOab8.s:2705   .debug_str:0000000000000159 .LASF1
     /tmp/ccWLOab8.s:2697   .debug_str:0000000000000129 .LASF2
     /tmp/ccWLOab8.s:2683   .debug_str:0000000000000073 .LASF4
     /tmp/ccWLOab8.s:2703   .debug_str:0000000000000147 .LASF3
     /tmp/ccWLOab8.s:2673   .debug_str:0000000000000023 .LASF5
     /tmp/ccWLOab8.s:2669   .debug_str:0000000000000000 .LASF6
     /tmp/ccWLOab8.s:2691   .debug_str:00000000000000ee .LASF7
     /tmp/ccWLOab8.s:2735   .debug_str:000000000000031d .LASF8
     /tmp/ccWLOab8.s:2681   .debug_str:0000000000000065 .LASF9
     /tmp/ccWLOab8.s:2777   .debug_str:00000000000004c6 .LASF10
     /tmp/ccWLOab8.s:2693   .debug_str:0000000000000101 .LASF11
     /tmp/ccWLOab8.s:2763   .debug_str:000000000000041e .LASF12
     /tmp/ccWLOab8.s:2731   .debug_str:00000000000002e9 .LASF13
     /tmp/ccWLOab8.s:2707   .debug_str:000000000000016c .LASF14
     /tmp/ccWLOab8.s:2685   .debug_str:000000000000007a .LASF15
     /tmp/ccWLOab8.s:2737   .debug_str:000000000000032d .LASF16
     /tmp/ccWLOab8.s:2671   .debug_str:0000000000000013 .LASF24
     /tmp/ccWLOab8.s:2719   .debug_str:0000000000000285 .LASF50
     /tmp/ccWLOab8.s:2675   .debug_str:000000000000002a .LASF17
     /tmp/ccWLOab8.s:2775   .debug_str:00000000000004c1 .LASF18
     /tmp/ccWLOab8.s:2771   .debug_str:00000000000004ac .LASF19
     /tmp/ccWLOab8.s:2739   .debug_str:0000000000000343 .LASF51
     /tmp/ccWLOab8.s:2733   .debug_str:00000000000002f9 .LASF52
     /tmp/ccWLOab8.s:2769   .debug_str:00000000000004a0 .LASF20
     /tmp/ccWLOab8.s:2689   .debug_str:00000000000000ca .LASF22
     /tmp/ccWLOab8.s:2701   .debug_str:000000000000013c .LASF21
     /tmp/ccWLOab8.s:2729   .debug_str:00000000000002c5 .LASF23
     /tmp/ccWLOab8.s:2717   .debug_str:000000000000026c .LASF25
     /tmp/ccWLOab8.s:2725   .debug_str:00000000000002b1 .LASF26
     /tmp/ccWLOab8.s:2749   .debug_str:000000000000039c .LASF27
     /tmp/ccWLOab8.s:2755   .debug_str:00000000000003da .LASF32
     /tmp/ccWLOab8.s:2677   .debug_str:000000000000002f .LASF34
     /tmp/ccWLOab8.s:2773   .debug_str:00000000000004b1 .LASF28
     /tmp/ccWLOab8.s:2687   .debug_str:0000000000000090 .LASF30
     /tmp/ccWLOab8.s:2721   .debug_str:0000000000000291 .LASF29
GAS LISTING /tmp/ccWLOab8.s 			page 28


     /tmp/ccWLOab8.s:2765   .debug_str:000000000000042e .LASF31
     /tmp/ccWLOab8.s:2761   .debug_str:0000000000000414 .LASF33
     /tmp/ccWLOab8.s:2767   .debug_str:000000000000046e .LASF35
     /tmp/ccWLOab8.s:2679   .debug_str:0000000000000054 .LASF36
     /tmp/ccWLOab8.s:2753   .debug_str:00000000000003b0 .LASF37
     /tmp/ccWLOab8.s:2759   .debug_str:00000000000003f1 .LASF38
     /tmp/ccWLOab8.s:2713   .debug_str:0000000000000184 .LASF39
     /tmp/ccWLOab8.s:404    .text:000000000000021c .LFB10
     /tmp/ccWLOab8.s:707    .text:00000000000003a0 .LFE10
     /tmp/ccWLOab8.s:2727   .debug_str:00000000000002bd .LASF40
     /tmp/ccWLOab8.s:2169   .debug_loc:0000000000000000 .LLST13
     /tmp/ccWLOab8.s:2227   .debug_loc:00000000000000dd .LLST14
     /tmp/ccWLOab8.s:416    .text:0000000000000228 .LBB41
     /tmp/ccWLOab8.s:2617   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccWLOab8.s:2238   .debug_loc:0000000000000113 .LLST15
     /tmp/ccWLOab8.s:2249   .debug_loc:0000000000000149 .LLST16
     /tmp/ccWLOab8.s:478    .text:0000000000000278 .LBB44
     /tmp/ccWLOab8.s:2260   .debug_loc:000000000000017f .LLST17
     /tmp/ccWLOab8.s:2281   .debug_loc:00000000000001e3 .LLST18
     /tmp/ccWLOab8.s:2296   .debug_loc:000000000000022c .LLST19
     /tmp/ccWLOab8.s:566    .text:00000000000002ec .LBB50
     /tmp/ccWLOab8.s:2321   .debug_loc:000000000000029d .LLST20
     /tmp/ccWLOab8.s:586    .text:0000000000000304 .LBB53
     /tmp/ccWLOab8.s:2332   .debug_loc:00000000000002d3 .LLST21
     /tmp/ccWLOab8.s:108    .text:00000000000000b4 .LFB7
     /tmp/ccWLOab8.s:398    .text:000000000000021c .LFE7
     /tmp/ccWLOab8.s:2347   .debug_loc:000000000000031c .LLST0
     /tmp/ccWLOab8.s:2401   .debug_loc:00000000000003f5 .LLST1
     /tmp/ccWLOab8.s:121    .text:00000000000000c4 .LBB17
     /tmp/ccWLOab8.s:146    .text:00000000000000e0 .LBE17
     /tmp/ccWLOab8.s:2412   .debug_loc:000000000000042b .LLST2
     /tmp/ccWLOab8.s:2423   .debug_loc:0000000000000461 .LLST3
     /tmp/ccWLOab8.s:151    .text:00000000000000e4 .LBB19
     /tmp/ccWLOab8.s:2430   .debug_loc:0000000000000484 .LLST4
     /tmp/ccWLOab8.s:2480   .debug_loc:000000000000054a .LLST5
     /tmp/ccWLOab8.s:2491   .debug_loc:0000000000000580 .LLST6
     /tmp/ccWLOab8.s:2508   .debug_loc:00000000000005cb .LLST7
     /tmp/ccWLOab8.s:2525   .debug_loc:0000000000000616 .LLST8
     /tmp/ccWLOab8.s:2532   .debug_loc:0000000000000639 .LLST9
     /tmp/ccWLOab8.s:236    .text:0000000000000148 .LBB26
     /tmp/ccWLOab8.s:2543   .debug_loc:000000000000066f .LLST10
     /tmp/ccWLOab8.s:2564   .debug_loc:00000000000006d3 .LLST11
     /tmp/ccWLOab8.s:2579   .debug_loc:000000000000071c .LLST12
     /tmp/ccWLOab8.s:2699   .debug_str:0000000000000137 .LASF41
     /tmp/ccWLOab8.s:2757   .debug_str:00000000000003e7 .LASF42
     /tmp/ccWLOab8.s:2745   .debug_str:0000000000000385 .LASF43
     /tmp/ccWLOab8.s:2751   .debug_str:00000000000003a9 .LASF44
     /tmp/ccWLOab8.s:2709   .debug_str:0000000000000178 .LASF45
     /tmp/ccWLOab8.s:2711   .debug_str:000000000000017f .LASF53
     /tmp/ccWLOab8.s:2695   .debug_str:0000000000000110 .LASF54
     /tmp/ccWLOab8.s:10     .text:0000000000000000 .LFB2
     /tmp/ccWLOab8.s:55     .text:0000000000000058 .LFE2
     /tmp/ccWLOab8.s:63     .text:0000000000000058 .LFB0
     /tmp/ccWLOab8.s:102    .text:00000000000000b4 .LFE0
     /tmp/ccWLOab8.s:2747   .debug_str:0000000000000393 .LASF46
     /tmp/ccWLOab8.s:87     .text:0000000000000090 .LVL1
     /tmp/ccWLOab8.s:407    .text:000000000000021c .LVL34
GAS LISTING /tmp/ccWLOab8.s 			page 29


     /tmp/ccWLOab8.s:604    .text:000000000000031c .LVL49
     /tmp/ccWLOab8.s:614    .text:0000000000000328 .LVL50
     /tmp/ccWLOab8.s:683    .text:0000000000000384 .LVL55
     /tmp/ccWLOab8.s:687    .text:0000000000000388 .LVL56
     /tmp/ccWLOab8.s:693    .text:000000000000038c .LVL57
     /tmp/ccWLOab8.s:695    .text:0000000000000390 .LVL58
     /tmp/ccWLOab8.s:699    .text:0000000000000394 .LVL59
     /tmp/ccWLOab8.s:701    .text:0000000000000398 .LVL60
     /tmp/ccWLOab8.s:704    .text:000000000000039c .LVL61
     /tmp/ccWLOab8.s:471    .text:0000000000000274 .LVL38
     /tmp/ccWLOab8.s:512    .text:00000000000002b0 .LVL43
     /tmp/ccWLOab8.s:524    .text:00000000000002c0 .LVL44
     /tmp/ccWLOab8.s:415    .text:0000000000000228 .LVL35
     /tmp/ccWLOab8.s:421    .text:0000000000000230 .LVL36
     /tmp/ccWLOab8.s:477    .text:0000000000000278 .LVL39
     /tmp/ccWLOab8.s:559    .text:00000000000002e8 .LVL46
     /tmp/ccWLOab8.s:634    .text:0000000000000344 .LVL53
     /tmp/ccWLOab8.s:483    .text:0000000000000280 .LVL40
     /tmp/ccWLOab8.s:495    .text:0000000000000290 .LVL42
     /tmp/ccWLOab8.s:536    .text:00000000000002c8 .LVL45
     /tmp/ccWLOab8.s:624    .text:0000000000000330 .LVL51
     /tmp/ccWLOab8.s:628    .text:0000000000000338 .LVL52
     /tmp/ccWLOab8.s:565    .text:00000000000002ec .LVL47
     /tmp/ccWLOab8.s:582    .text:0000000000000304 .LVL48
     /tmp/ccWLOab8.s:657    .text:0000000000000364 .LVL54
     /tmp/ccWLOab8.s:111    .text:00000000000000b4 .LVL2
     /tmp/ccWLOab8.s:126    .text:00000000000000cc .LVL4
     /tmp/ccWLOab8.s:189    .text:0000000000000114 .LVL12
     /tmp/ccWLOab8.s:195    .text:000000000000011c .LVL13
     /tmp/ccWLOab8.s:270    .text:0000000000000180 .LVL20
     /tmp/ccWLOab8.s:279    .text:0000000000000188 .LVL21
     /tmp/ccWLOab8.s:287    .text:0000000000000194 .LVL22
     /tmp/ccWLOab8.s:299    .text:00000000000001a0 .LVL24
     /tmp/ccWLOab8.s:314    .text:00000000000001b8 .LVL25
     /tmp/ccWLOab8.s:321    .text:00000000000001c4 .LVL26
     /tmp/ccWLOab8.s:144    .text:00000000000000e0 .LVL6
     /tmp/ccWLOab8.s:365    .text:00000000000001f4 .LVL30
     /tmp/ccWLOab8.s:375    .text:0000000000000200 .LVL31
     /tmp/ccWLOab8.s:120    .text:00000000000000c4 .LVL3
     /tmp/ccWLOab8.s:150    .text:00000000000000e4 .LVL7
     /tmp/ccWLOab8.s:232    .text:0000000000000148 .LVL16
     /tmp/ccWLOab8.s:323    .text:00000000000001c8 .LVL27
     /tmp/ccWLOab8.s:163    .text:00000000000000f4 .LVL8
     /tmp/ccWLOab8.s:181    .text:000000000000010c .LVL10
     /tmp/ccWLOab8.s:185    .text:0000000000000110 .LVL11
     /tmp/ccWLOab8.s:293    .text:0000000000000198 .LVL23
     /tmp/ccWLOab8.s:169    .text:00000000000000fc .LVL9
     /tmp/ccWLOab8.s:219    .text:000000000000013c .LVL14
     /tmp/ccWLOab8.s:222    .text:0000000000000140 .LVL15
     /tmp/ccWLOab8.s:359    .text:00000000000001f0 .LVL29
     /tmp/ccWLOab8.s:241    .text:0000000000000150 .LVL17
     /tmp/ccWLOab8.s:253    .text:0000000000000160 .LVL19
     /tmp/ccWLOab8.s:336    .text:00000000000001d0 .LVL28
     /tmp/ccWLOab8.s:385    .text:0000000000000208 .LVL32
     /tmp/ccWLOab8.s:389    .text:0000000000000210 .LVL33
     /tmp/ccWLOab8.s:736    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccWLOab8.s:234    .text:0000000000000148 .LBE19
GAS LISTING /tmp/ccWLOab8.s 			page 30


     /tmp/ccWLOab8.s:274    .text:0000000000000180 .LBB30
     /tmp/ccWLOab8.s:327    .text:00000000000001c8 .LBE30
     /tmp/ccWLOab8.s:174    .text:0000000000000104 .LBB22
     /tmp/ccWLOab8.s:224    .text:0000000000000140 .LBE22
     /tmp/ccWLOab8.s:282    .text:0000000000000188 .LBB23
     /tmp/ccWLOab8.s:289    .text:0000000000000194 .LBE23
     /tmp/ccWLOab8.s:273    .text:0000000000000180 .LBE26
     /tmp/ccWLOab8.s:328    .text:00000000000001c8 .LBB31
     /tmp/ccWLOab8.s:361    .text:00000000000001f0 .LBE31
     /tmp/ccWLOab8.s:378    .text:0000000000000200 .LBB32
     /tmp/ccWLOab8.s:396    .text:000000000000021c .LBE32
     /tmp/ccWLOab8.s:473    .text:0000000000000274 .LBE41
     /tmp/ccWLOab8.s:516    .text:00000000000002b0 .LBB48
     /tmp/ccWLOab8.s:527    .text:00000000000002c0 .LBE48
     /tmp/ccWLOab8.s:515    .text:00000000000002b0 .LBE44
     /tmp/ccWLOab8.s:528    .text:00000000000002c0 .LBB49
     /tmp/ccWLOab8.s:561    .text:00000000000002e8 .LBE49
     /tmp/ccWLOab8.s:617    .text:0000000000000328 .LBB57
     /tmp/ccWLOab8.s:637    .text:0000000000000344 .LBE57
     /tmp/ccWLOab8.s:584    .text:0000000000000304 .LBE50
     /tmp/ccWLOab8.s:638    .text:0000000000000344 .LBB58
     /tmp/ccWLOab8.s:660    .text:0000000000000364 .LBE58
     /tmp/ccWLOab8.s:601    .text:0000000000000318 .LBE53
     /tmp/ccWLOab8.s:661    .text:0000000000000364 .LBB59
     /tmp/ccWLOab8.s:680    .text:0000000000000380 .LBE59
     /tmp/ccWLOab8.s:684    .text:0000000000000384 .LBB60
     /tmp/ccWLOab8.s:690    .text:0000000000000388 .LBE60

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
